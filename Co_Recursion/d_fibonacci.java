package Co_Recursion;

public class d_fibonacci {
    public static void main(String[] args) {
        System.out.println(fibonacci(7));
    }
    public static int fibonacci(int num) {
        if (num == 0 || num == 1) return 1; // 정수 들어오니까 num <= 1 해도 됨
        return fibonacci(num-1) + fibonacci(num-2);
    }
}
// 현재 문제는 입력된 인자가 피보나치 수열의 번호임
// 즉, num 번째 피보나치 수열의 값은 몇 인가 이거임
// 처음에 이 문제가 이해가 안됐던게 이 수는 피보나치 수열에 포함되지 않는데 뭐지? 이거 였음
// 다시봐도 좀 이해안가는게
// 왜 1이랑 2로 빼주면 피보나치지 ? 했는데
// 그냥 피보나치 수열 찾아보니까 이해감
// 피보나치 수열은 이전 두 요소의 합이 다음 원소가 되는 수열이다
// 이때 처음 시작 수는 0과 1 혹은 1 과 1이 된다
// 그럼 num 을 0과 1이 될때 까지 나누면 되는데
// 피보나치 수열은 앞서 말한 것과 같이 "이전 두 요소의 합"이다
// 그럼 재귀호출이 이루어져 가장 베이스 케이스로 리턴되는 값은
// 0 + 1 이어야한다.
// 그럼 f() + f() 형태로 만들어져야하고
// 이 부분에 재귀함수를 삽입하면 해결된다
// 그러니까 트리 구조로
// 0과 1 부터 더하기 시작해서 피보나치 수열이 역순으로 완성되는 것이라 볼 수 있다

// 솔직히 말하면 완전한 이해는 가지 않았다
// 뭔가 확실히 느낌이 오지 않고 아 뭔가 알거같은데 상태...
// 왜냐면 이게
// 0과 1이 될때까지 쪼개서
// 그걸 역으로 다시 합치는데 왜 num 번째 수열이 도출되는 값인지 모르겠다
// 트리구조로 잘라봐도 뭔가 확 안 와닿는다.
// 대충 num 을 이전과 그이전의 수로 나누고 나누고 나누고
// 결국 1과 2가 남으면 (0은 어차피 더해도 날라가니까)
// 나온 1과 2를 싹다 더해서 피보나치 수열이되는거
// 아 결국 피보나치 수열은 1과 2로 시작하고 쪼개진 1과 2를 싹 다 더하면 결국 피보나치 수열이다
// 다시보니까 ㅋㅋㅋ
// 그러니까 마지막까지 쪼개진 재귀는 1과 2 더해서 3에 2 더해서 5 등등
// 걍 순서는 이렇긴한데
// 재귀호출이 이루어지면서 결국 싹 다 더하면 해당 번째의 피보나치 수열의 값이네

// 이게 수학적인 거라 완전한 이해가 어려운거 같다
// 내가 바로바로 이해가 갔으면 수학자를 했겠지;